package com.thingtrack.bustrack.view.module.organization.internal;

import javax.annotation.PostConstruct;
import javax.annotation.PreDestroy;

import org.springframework.beans.factory.annotation.Autowired;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.VerticalLayout;

import com.thingtrack.bustrack.service.api.GasStationService;
import com.thingtrack.bustrack.service.api.GasStationStatusService;
import com.thingtrack.bustrack.service.api.GasStationTypeService;
import com.thingtrack.konekti.service.api.LocationService;
import com.thingtrack.konekti.service.api.LocationTypeService;
import com.thingtrack.konekti.service.api.OrganizationService;
import com.thingtrack.konekti.service.api.OrganizationTypeService;
import com.thingtrack.konekti.service.api.WarehouseService;
import com.thingtrack.konekti.service.api.WarehouseTypeService;
import com.thingtrack.konekti.service.api.WorkshopService;
import com.thingtrack.konekti.service.api.WorkshopTypeService;
import com.thingtrack.konekti.view.addon.ui.AbstractViewContainer;
import com.thingtrack.konekti.view.addon.ui.SliderView;
import com.thingtrack.konekti.view.kernel.IWorkbenchContext;
import com.thingtrack.konekti.view.kernel.ui.layout.ISliderView;
import com.thingtrack.konekti.view.kernel.ui.layout.IViewChangeListener;
import com.thingtrack.konekti.view.kernel.ui.layout.IView;

@SuppressWarnings("serial")
public class OrganizationViewContainer extends AbstractViewContainer {

	@AutoGenerated
	private VerticalLayout mainLayout;
	@AutoGenerated
	private SliderView sliderView;
	
	/** Views **/
	private OrganizationView organizationView;	
	private LocationView locationView;	
	private WorkshopView workshopView;	
	private GasStationView gasStationView;
	
	/** Business services **/
	@Autowired
	private OrganizationService organizationService;
	@Autowired
	private OrganizationTypeService organizationTypeService;	
	@Autowired
	private LocationService locationService;
	@Autowired
	private LocationTypeService locationTypeService;	
	@Autowired
	private WarehouseService warehouseService;
	@Autowired
	private WarehouseTypeService warehouseTypeService;	
	@Autowired
	private WorkshopService workshopService;
	@Autowired
	private WorkshopTypeService workshopTypeService;	
	@Autowired
	private GasStationService gasStationService;
	@Autowired
	private GasStationTypeService gasStationTypeService;
	@Autowired
	private GasStationStatusService gasStationStatusService;
	
	// Thread Local Bundle Business Services
	private static ThreadLocal<OrganizationService> threadOrganizationService = new ThreadLocal<OrganizationService>();
	private static ThreadLocal<OrganizationTypeService> threadOrganizationTypeService = new ThreadLocal<OrganizationTypeService>();
	private static ThreadLocal<LocationService> threadLocationService = new ThreadLocal<LocationService>();
	private static ThreadLocal<LocationTypeService> threadLocationTypeService = new ThreadLocal<LocationTypeService>();
	private static ThreadLocal<WarehouseService> threadWarehouseService = new ThreadLocal<WarehouseService>();
	private static ThreadLocal<WarehouseTypeService> threadWarehouseTypeService = new ThreadLocal<WarehouseTypeService>();
	private static ThreadLocal<WorkshopService> threadWorkshopService = new ThreadLocal<WorkshopService>();
	private static ThreadLocal<WorkshopTypeService> threadWorkshopTypeService = new ThreadLocal<WorkshopTypeService>();
	private static ThreadLocal<GasStationService> threadGasStationService = new ThreadLocal<GasStationService>();
	private static ThreadLocal<GasStationTypeService> threadGasStationTypeService = new ThreadLocal<GasStationTypeService>();
	private static ThreadLocal<GasStationStatusService> threadGasStationStatusService = new ThreadLocal<GasStationStatusService>();
	
	/** Konekti Workbench Context **/
	private IWorkbenchContext context;
	
	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */
		
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	
	public OrganizationViewContainer (IWorkbenchContext context) {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// TODO add user code here
		this.context = context;
	}

	@SuppressWarnings("unused")
	@PostConstruct
	private void createViews() {
		// initialize thread local bundle services
		threadOrganizationService.set(organizationService);
		threadOrganizationTypeService.set(organizationTypeService);
		threadLocationService.set(locationService);
		threadLocationTypeService.set(locationTypeService);
		threadWarehouseService.set(warehouseService);
		threadWarehouseTypeService.set(warehouseTypeService);
		threadWorkshopService.set(workshopService);
		threadWorkshopTypeService.set(workshopTypeService);
		threadGasStationService.set(gasStationService);
		threadGasStationTypeService.set(gasStationTypeService);
		threadGasStationStatusService.set(gasStationStatusService);
		
		// add all views controlled by SliderView Component
		organizationView = new OrganizationView(this);
		sliderView.addView(organizationView);
		views.put(0, organizationView);
			
		locationView = new LocationView(this);
		sliderView.addView(locationView);
		views.put(1, locationView);
			
		workshopView = new WorkshopView(this, context);
		sliderView.addView(workshopView);
		views.put(2, workshopView);
		
		gasStationView = new GasStationView(this);
		sliderView.addView(gasStationView);
		views.put(3, gasStationView);
		
	}

	@SuppressWarnings("unused")
	@PreDestroy
	private void destroyViews() {
		// destroy thread local bundle services
		threadOrganizationService.set(null);
		threadOrganizationTypeService.set(null);
		threadLocationService.set(null);
		threadLocationTypeService.set(null);
		threadWarehouseService.set(null);
		threadWarehouseTypeService.set(null);
		threadWorkshopService.set(null);
		threadWorkshopTypeService.set(null);
		threadGasStationService.set(null);
		threadGasStationTypeService.set(null);
		threadGasStationStatusService.set(null);
		
	}
	
    public static OrganizationService getOrganizationService() {
        return threadOrganizationService.get();
    }
    public static OrganizationTypeService getOrganizationTypeService() {
        return threadOrganizationTypeService.get();
    }    
    public static LocationService getLocationService() {
        return threadLocationService.get();
    }
    public static LocationTypeService getLocationTypeService() {
        return threadLocationTypeService.get();
    }
    public static WarehouseService getWarehouseService() {
        return threadWarehouseService.get();
    }
    public static WarehouseTypeService getWarehouseTypeService() {
        return threadWarehouseTypeService.get();
    }
    public static WorkshopService getWorkshopService() {
        return threadWorkshopService.get();
    }
    public static WorkshopTypeService getWorkshopTypeService() {
        return threadWorkshopTypeService.get();
    }
    public static GasStationService getGasStationService() {
        return threadGasStationService.get();
    }
    public static GasStationTypeService getGasStationTypeService() {
        return threadGasStationTypeService.get();
    }
    public static GasStationStatusService getGasStationStatusService() {
        return threadGasStationStatusService.get();
    }
    
	@Override
	public ISliderView getSliderView() {
		return sliderView;
		
	}
	
	@Override
	public IView getSelectedView() {
		return sliderView.getSelectedView();
		
	}
	
	@Override
	public void addListener(IViewChangeListener listener) {
		sliderView.addListener(listener);
		
	}
	
	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(false);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// sliderView_1
		sliderView = new SliderView();
		sliderView.setImmediate(false);
		sliderView.setWidth("100.0%");
		sliderView.setHeight("100.0%");
		mainLayout.addComponent(sliderView);
		mainLayout.setExpandRatio(sliderView, 1.0f);
		
		return mainLayout;
	}

}
