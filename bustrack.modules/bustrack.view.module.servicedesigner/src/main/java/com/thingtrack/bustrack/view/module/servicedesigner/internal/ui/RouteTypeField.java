package com.thingtrack.bustrack.view.module.servicedesigner.internal.ui;

import org.vaadin.addon.customfield.CustomField;

import com.thingtrack.konekti.domain.Service;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.Property;
import com.vaadin.ui.OptionGroup;
import com.vaadin.ui.VerticalLayout;

public class RouteTypeField extends CustomField {

	public static final String ROUTE_TYPE_FASTEST_CAPTION = "Camino más rápido";
	public static final String ROUTE_TYPE_SHORTEST_CAPTION = "Camino más corto";

	@AutoGenerated
	private VerticalLayout mainLayout;
	@AutoGenerated
	private OptionGroup routeTypeOptionGroup;

	/**
	 * The constructor should first build the main layout, set the composition
	 * root and then do any custom initialization.
	 * 
	 * The constructor will not be automatically regenerated by the visual
	 * editor.
	 */
	public RouteTypeField() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// TODO add user code here
		routeTypeOptionGroup.setStyleName("horizontal");

		routeTypeOptionGroup.addItem(ROUTE_TYPE_FASTEST_CAPTION);
		routeTypeOptionGroup.addItem(ROUTE_TYPE_SHORTEST_CAPTION);
		routeTypeOptionGroup.select(ROUTE_TYPE_FASTEST_CAPTION);
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(false);

		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");

		// avoidanceStrategiesOptionGroup
		routeTypeOptionGroup = new OptionGroup();
		routeTypeOptionGroup.setImmediate(false);
		routeTypeOptionGroup.setWidth("100.0%");
		routeTypeOptionGroup.setHeight("100.0%");
		mainLayout.addComponent(routeTypeOptionGroup);
		mainLayout.setExpandRatio(routeTypeOptionGroup, 1.0f);

		return mainLayout;
	}

	@Override
	public Object getValue() {

		if (routeTypeOptionGroup.isSelected(ROUTE_TYPE_FASTEST_CAPTION))
			return Service.ROUTE_TYPE.FASTEST.toString();

		if (routeTypeOptionGroup.isSelected(ROUTE_TYPE_SHORTEST_CAPTION))
			return Service.ROUTE_TYPE.SHORTEST.toString();

		return Service.ROUTE_TYPE.FASTEST.toString();
	}

	@Override
	public void setValue(Object newValue) throws ReadOnlyException,
			ConversionException {

		//Deselect all
		routeTypeOptionGroup.setValue(ROUTE_TYPE_FASTEST_CAPTION);
				
		if(newValue == null)
			return;
		
		if (!(newValue instanceof String))
			throw new ConversionException("The value in not a String.class");

		String routeType = (String) newValue;

		if (Service.ROUTE_TYPE.FASTEST.toString().equals(routeType)) {
			routeTypeOptionGroup.select(ROUTE_TYPE_FASTEST_CAPTION);
		}
		else if (Service.ROUTE_TYPE.SHORTEST.toString().equals(routeType)) {
			routeTypeOptionGroup.select(ROUTE_TYPE_SHORTEST_CAPTION);
		}

	}

	@Override
	public Class<?> getType() {
		// TODO Auto-generated method stub
		return null;
	}

}
