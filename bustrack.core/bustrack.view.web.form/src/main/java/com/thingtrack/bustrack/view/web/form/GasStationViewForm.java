package com.thingtrack.bustrack.view.web.form;

import org.osgi.framework.BundleContext;
import org.osgi.framework.FrameworkUtil;
import org.osgi.framework.ServiceReference;

import com.thingtrack.bustrack.domain.GasStationStatus;
import com.thingtrack.bustrack.domain.GasStationType;
import com.thingtrack.bustrack.service.api.GasStationStatusService;
import com.thingtrack.bustrack.service.api.GasStationTypeService;
import com.thingtrack.bustrack.view.web.form.field.GasStationRegisterCollectionField;
import com.thingtrack.konekti.domain.Workshop;
import com.thingtrack.konekti.service.api.WorkshopService;
import com.thingtrack.konekti.view.addon.data.BindingSource;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.util.BeanItemContainer;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Select;
import com.vaadin.ui.TextField;


@SuppressWarnings("serial")
public class GasStationViewForm extends CustomComponent {

	@AutoGenerated
	private AbsoluteLayout mainLayout;
	@AutoGenerated
	private GasStationRegisterCollectionField gasStationRegistersField;
	@AutoGenerated
	private ComboBox gasStationStatusField;
	@AutoGenerated
	private ComboBox gasStationTypeField;
	@AutoGenerated
	private TextField volumeField;
	@AutoGenerated
	private TextField descriptionField;
	@AutoGenerated
	private TextField commentField;
	@AutoGenerated
	private TextField codeField;

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	private WorkshopService workshopService;
	private GasStationTypeService gasStationTypeService;
	private GasStationStatusService gasStationStatusService;
	
	private BeanItemContainer<GasStationType> bcGasStationType = new BindingSource<GasStationType>(GasStationType.class);
	private BeanItemContainer<GasStationStatus> bcGasStationStatus = new BindingSource<GasStationStatus>(GasStationStatus.class);
	
	/**
	 * The constructor should first build the main layout, set the composition
	 * root and then do any custom initialization.
	 * 
	 * The constructor will not be automatically regenerated by the visual
	 * editor.
	 */
	public GasStationViewForm() throws IllegalArgumentException, Exception {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// TODO add user code here
		initComponents();
		
		// configure Organization Type data		
		gasStationTypeField.setNullSelectionAllowed(false);
		gasStationTypeField.setItemCaptionMode(Select.ITEM_CAPTION_MODE_PROPERTY);
		gasStationTypeField.setItemCaptionPropertyId("description");
		
		gasStationStatusField.setNullSelectionAllowed(false);
		gasStationStatusField.setItemCaptionMode(Select.ITEM_CAPTION_MODE_PROPERTY);
		gasStationStatusField.setItemCaptionPropertyId("description");
			
		// get form services from OSGi Service Registry
		getServices();
		
		// load data sources
		loadData();
	}
	
	
	private void initComponents() {
		codeField.setNullRepresentation("");
		descriptionField.setNullRepresentation("");
		codeField.setNullRepresentation("");
		commentField.setNullRepresentation("");
		
		codeField.focus();
	}
	
	
	@SuppressWarnings({ "unchecked", "rawtypes" })
	private void getServices() {
		try {			
			BundleContext bundleContext = FrameworkUtil.getBundle(GasStationViewForm.class).getBundleContext();
			
			ServiceReference workshopServiceReference = bundleContext.getServiceReference(WorkshopService.class.getName());
			workshopService = WorkshopService.class.cast(bundleContext.getService(workshopServiceReference));
			
			ServiceReference gasStationTypeServiceReference = bundleContext.getServiceReference(GasStationTypeService.class.getName());
			gasStationTypeService = GasStationTypeService.class.cast(bundleContext.getService(gasStationTypeServiceReference));
			
			ServiceReference gasStationStatusServiceReference = bundleContext.getServiceReference(GasStationStatusService.class.getName());
			gasStationStatusService = GasStationStatusService.class.cast(bundleContext.getService(gasStationStatusServiceReference));
			
		}
		catch (Exception e) {
			e.getMessage();
			
		}
		
	}
		
	private void loadData() throws IllegalArgumentException, Exception {
		bcGasStationType.removeAllItems();
		bcGasStationType.addAll(gasStationTypeService.getAll());		
	
		bcGasStationStatus.removeAllItems();
		bcGasStationStatus.addAll(gasStationStatusService.getAll());
		
		gasStationTypeField.setContainerDataSource(bcGasStationType);
		gasStationStatusField.setContainerDataSource(bcGasStationStatus);
	}

	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("560px");
		mainLayout.setHeight("520px");
		mainLayout.setMargin(true);
		
		// top-level component properties
		setWidth("560px");
		setHeight("520px");
		
		// codeField
		codeField = new TextField();
		codeField.setCaption("Código");
		codeField.setImmediate(false);
		codeField.setWidth("120px");
		codeField.setHeight("-1px");
		codeField.setRequired(true);
		mainLayout.addComponent(codeField, "top:20.0px;left:20.0px;");
		
		// commentField
		commentField = new TextField();
		commentField.setCaption("Comentario");
		commentField.setImmediate(false);
		commentField.setWidth("520px");
		commentField.setHeight("120px");
		mainLayout.addComponent(commentField, "top:140.0px;left:20.0px;");
		
		// descriptionField
		descriptionField = new TextField();
		descriptionField.setCaption("Descripción");
		descriptionField.setImmediate(false);
		descriptionField.setWidth("520px");
		descriptionField.setHeight("-1px");
		mainLayout.addComponent(descriptionField, "top:60.0px;left:20.0px;");
		
		// volumeField
		volumeField = new TextField();
		volumeField.setCaption("Volumen Tot. [L]");
		volumeField.setImmediate(false);
		volumeField.setWidth("80px");
		volumeField.setHeight("-1px");
		mainLayout.addComponent(volumeField, "top:100.0px;left:20.0px;");
		
		// gasStationTypeField
		gasStationTypeField = new ComboBox();
		gasStationTypeField.setCaption("Tipo estación carburante");
		gasStationTypeField.setImmediate(true);
		gasStationTypeField.setWidth("240px");
		gasStationTypeField.setHeight("-1px");
		gasStationTypeField.setRequired(true);
		mainLayout.addComponent(gasStationTypeField,
				"top:100.0px;left:120.0px;");
		
		// gasStationStatusField
		gasStationStatusField = new ComboBox();
		gasStationStatusField.setCaption("Estado estación carburante");
		gasStationStatusField.setImmediate(true);
		gasStationStatusField.setWidth("160px");
		gasStationStatusField.setHeight("-1px");
		gasStationStatusField.setRequired(true);
		mainLayout.addComponent(gasStationStatusField,
				"top:100.0px;left:380.0px;");
		
		// GasRegistersField
		gasStationRegistersField = new GasStationRegisterCollectionField();
		gasStationRegistersField.setCaption("Registros estación carburante ");
		gasStationRegistersField.setImmediate(false);
		gasStationRegistersField.setWidth("520px");
		gasStationRegistersField.setHeight("220px");
		mainLayout.addComponent(gasStationRegistersField, "top:280.0px;left:20.0px;");
		
		return mainLayout;
	}
}