package com.thingtrack.bustrack.view.web.form;

import org.osgi.framework.BundleContext;
import org.osgi.framework.FrameworkUtil;
import org.osgi.framework.ServiceReference;

import com.thingtrack.bustrack.domain.TireStatus;
import com.thingtrack.bustrack.domain.TireType;
import com.thingtrack.bustrack.domain.Vehicle;
import com.thingtrack.bustrack.service.api.TireStatusService;
import com.thingtrack.bustrack.service.api.TireTypeService;
import com.thingtrack.bustrack.service.api.VehicleService;
import com.thingtrack.konekti.domain.Supplier;
import com.thingtrack.konekti.service.api.SupplierService;
import com.thingtrack.konekti.view.addon.data.BindingSource;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.util.BeanItemContainer;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Select;
import com.vaadin.ui.TextField;

@SuppressWarnings("serial")
public class TireViewForm extends CustomComponent {

	@AutoGenerated
	private AbsoluteLayout mainLayout;
	@AutoGenerated
	private ComboBox tireStatusField;
	@AutoGenerated
	private ComboBox vehicleField;
	@AutoGenerated
	private ComboBox tireTypeField;
	@AutoGenerated
	private ComboBox supplierField;
	@AutoGenerated
	private TextField vehicleLocationField;
	@AutoGenerated
	private TextField serialNumberField;
	@AutoGenerated
	private TextField punctureField;
	@AutoGenerated
	private TextField kmField;
	@AutoGenerated
	private TextField commentField;

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	// form services
	private VehicleService vehicleService;
	private SupplierService supplierService;
	private TireTypeService tireTypeService;
	private TireStatusService tireStatusService;
	
	// form datasources
	private BeanItemContainer<Vehicle> bcVehicle = new BindingSource<Vehicle>(Vehicle.class);
	private BeanItemContainer<Supplier> bcSupplier = new BindingSource<Supplier>(Supplier.class);
	private BeanItemContainer<TireType> bcTireType = new BindingSource<TireType>(TireType.class);
	private BeanItemContainer<TireStatus> bcTireStatus = new BindingSource<TireStatus>(TireStatus.class);
	
	/**
	 * The constructor should first build the main layout, set the composition
	 * root and then do any custom initialization.
	 * 
	 * The constructor will not be automatically regenerated by the visual
	 * editor.
	 * @throws Exception 
	 * @throws IllegalArgumentException 
	 */
	public TireViewForm() throws IllegalArgumentException, Exception {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// TODO add user code here
		initComponents();
		
		// configure Organization Type data
		vehicleField.setNullSelectionAllowed(false);
		vehicleField.setItemCaptionMode(Select.ITEM_CAPTION_MODE_PROPERTY);
		vehicleField.setItemCaptionPropertyId("vehicleNumber");
		
		supplierField.setItemCaptionMode(Select.ITEM_CAPTION_MODE_PROPERTY);
		supplierField.setItemCaptionPropertyId("name");
		
		supplierField.setItemCaptionMode(Select.ITEM_CAPTION_MODE_PROPERTY);
		supplierField.setItemCaptionPropertyId("name");
		
		tireTypeField.setNullSelectionAllowed(false);
		tireTypeField.setItemCaptionMode(Select.ITEM_CAPTION_MODE_PROPERTY);
		tireTypeField.setItemCaptionPropertyId("description");

		tireStatusField.setNullSelectionAllowed(false);
		tireStatusField.setItemCaptionMode(Select.ITEM_CAPTION_MODE_PROPERTY);
		tireStatusField.setItemCaptionPropertyId("description");
				
		// get form services from OSGi Service Registry
		getServices();
		
		// load data sources
		loadData();
		
	}
	
	private void initComponents() {
		vehicleLocationField.setNullRepresentation("");
		serialNumberField.setNullRepresentation("");
		punctureField.setNullRepresentation("");
		kmField.setNullRepresentation("");
		commentField.setNullRepresentation("");
		
		serialNumberField.selectAll();
		
		serialNumberField.focus();
	}
	
	@SuppressWarnings({ "unchecked", "rawtypes" })
	private void getServices() {
		try {
			BundleContext bundleContext = FrameworkUtil.getBundle(VehicleViewForm.class).getBundleContext();

			ServiceReference vehicleServiceReference = bundleContext.getServiceReference(VehicleService.class.getName());
			vehicleService = VehicleService.class.cast(bundleContext.getService(vehicleServiceReference));
			
			ServiceReference supplierServiceReference = bundleContext.getServiceReference(SupplierService.class.getName());
			supplierService = SupplierService.class.cast(bundleContext.getService(supplierServiceReference));
			
			ServiceReference tireTypeServiceReference = bundleContext.getServiceReference(TireTypeService.class.getName());
			tireTypeService = TireTypeService.class.cast(bundleContext.getService(tireTypeServiceReference));
			
			ServiceReference tireStatusServiceReference = bundleContext.getServiceReference(TireStatusService.class.getName());
			tireStatusService = TireStatusService.class.cast(bundleContext.getService(tireStatusServiceReference));
			
		}
		catch (Exception e) {
			e.getMessage();
			
		}
		
	}
	
	private void loadData() throws IllegalArgumentException, Exception {		
		bcVehicle.removeAllItems();
		bcVehicle.addAll(vehicleService.getAll());
		
		vehicleField.setContainerDataSource(bcVehicle);
		
		bcSupplier.removeAllItems();
		bcSupplier.addAll(supplierService.getAll());
		
		supplierField.setContainerDataSource(bcSupplier);
		
		bcTireType.removeAllItems();
		bcTireType.addAll(tireTypeService.getAll());
		
		tireTypeField.setContainerDataSource(bcTireType);		
		
		bcTireStatus.removeAllItems();
		bcTireStatus.addAll(tireStatusService.getAll());
		
		tireStatusField.setContainerDataSource(bcTireStatus);
	
	}
	
	
	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("560px");
		mainLayout.setHeight("280px");
		mainLayout.setMargin(true);
		
		// top-level component properties
		setWidth("560px");
		setHeight("280px");
		
		// commentField
		commentField = new TextField();
		commentField.setCaption("Comentario");
		commentField.setImmediate(false);
		commentField.setWidth("520px");
		commentField.setHeight("120px");
		commentField.setTabIndex(9);
		mainLayout.addComponent(commentField, "top:140.0px;left:20.0px;");
		
		// kmField
		kmField = new TextField();
		kmField.setCaption("Km");
		kmField.setImmediate(false);
		kmField.setWidth("80px");
		kmField.setHeight("-1px");
		kmField.setTabIndex(7);
		mainLayout.addComponent(kmField, "top:98.0px;left:260.0px;");
		
		// punctureField
		punctureField = new TextField();
		punctureField.setCaption("Pinchazos");
		punctureField.setImmediate(false);
		punctureField.setWidth("140px");
		punctureField.setHeight("-1px");
		punctureField.setTabIndex(5);
		mainLayout.addComponent(punctureField, "top:56.0px;left:400.0px;");
		
		// serialNumberField
		serialNumberField = new TextField();
		serialNumberField.setCaption("Número  de serie");
		serialNumberField.setImmediate(false);
		serialNumberField.setWidth("160px");
		serialNumberField.setHeight("-1px");
		serialNumberField.setTabIndex(1);
		serialNumberField.setRequired(true);
		mainLayout.addComponent(serialNumberField, "top:17.0px;left:20.0px;");
		
		// vehicleLocationField
		vehicleLocationField = new TextField();
		vehicleLocationField.setCaption("Ubicación vehículo");
		vehicleLocationField.setImmediate(false);
		vehicleLocationField.setWidth("120px");
		vehicleLocationField.setHeight("-1px");
		vehicleLocationField.setTabIndex(4);
		mainLayout.addComponent(vehicleLocationField,
				"top:56.0px;left:260.0px;");
		
		// supplierField
		supplierField = new ComboBox();
		supplierField.setCaption("Proveedor");
		supplierField.setImmediate(false);
		supplierField.setWidth("220px");
		supplierField.setHeight("-1px");
		supplierField.setTabIndex(6);
		mainLayout.addComponent(supplierField, "top:100.0px;left:20.0px;");
		
		// tireTypeField
		tireTypeField = new ComboBox();
		tireTypeField.setCaption("Tipo neumático");
		tireTypeField.setImmediate(false);
		tireTypeField.setWidth("168px");
		tireTypeField.setHeight("-1px");
		tireTypeField.setTabIndex(8);
		tireTypeField.setRequired(true);
		mainLayout.addComponent(tireTypeField, "top:97.0px;left:372.0px;");
		
		// vehicleField
		vehicleField = new ComboBox();
		vehicleField.setCaption("Vehículo");
		vehicleField.setImmediate(false);
		vehicleField.setWidth("220px");
		vehicleField.setHeight("-1px");
		vehicleField.setTabIndex(3);
		vehicleField.setRequired(true);
		mainLayout.addComponent(vehicleField, "top:56.0px;left:20.0px;");
		
		// tireStatusField
		tireStatusField = new ComboBox();
		tireStatusField.setCaption("Estado neumático");
		tireStatusField.setImmediate(false);
		tireStatusField.setWidth("168px");
		tireStatusField.setHeight("-1px");
		tireStatusField.setTabIndex(2);
		tireStatusField.setRequired(true);
		mainLayout.addComponent(tireStatusField, "top:17.0px;left:372.0px;");
		
		return mainLayout;
	}
}