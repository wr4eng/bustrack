package com.thingtrack.bustrack.view.web.form;

import org.osgi.framework.BundleContext;
import org.osgi.framework.FrameworkUtil;
import org.osgi.framework.ServiceReference;

import com.thingtrack.bustrack.domain.VehicleType;
import com.thingtrack.bustrack.service.api.VehicleTypeService;
import com.thingtrack.konekti.domain.EmployeeAgent;
import com.thingtrack.konekti.domain.OfferRequestLineStatus;
import com.thingtrack.konekti.domain.ServiceType;
import com.thingtrack.konekti.service.api.EmployeeAgentService;
import com.thingtrack.konekti.service.api.OfferRequestLineStatusService;
import com.thingtrack.konekti.service.api.ServiceTypeService;
import com.thingtrack.konekti.view.addon.data.BindingSource;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.util.BeanItemContainer;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.CheckBox;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.DateField;
import com.vaadin.ui.Select;
import com.vaadin.ui.TextField;

@SuppressWarnings("serial")
public class OfferRequestLineFixServiceViewForm extends CustomComponent {

	@AutoGenerated
	private AbsoluteLayout mainLayout;
	@AutoGenerated
	private ComboBox vehicleTypeField;
	@AutoGenerated
	private TextField startStopField;
	@AutoGenerated
	private DateField startDateField;
	@AutoGenerated
	private ComboBox serviceTypeField;
	@AutoGenerated
	private TextField paymentField;
	@AutoGenerated
	private TextField passengersField;
	@AutoGenerated
	private ComboBox offerRequestLineStatusField;
	@AutoGenerated
	private DateField offerRequestLineDateField;
	@AutoGenerated
	private TextField numberField;
	@AutoGenerated
	private CheckBox lunchField;
	@AutoGenerated
	private TextField intermediateStopsField;
	@AutoGenerated
	private TextField endStopField;
	@AutoGenerated
	private DateField endDateField;
	@AutoGenerated
	private ComboBox driverField;
	@AutoGenerated
	private CheckBox dinnerField;
	@AutoGenerated
	private TextField commentField;
	@AutoGenerated
	private CheckBox breackfastField;
	@AutoGenerated
	private CheckBox accomodationField;

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	// form services
	private OfferRequestLineStatusService offerRequestLineStatusService;
	private ServiceTypeService serviceTypeService;
	private VehicleTypeService vehicleTypeService;
	private EmployeeAgentService employeeAgentService;
	
	// form datasources
	private BeanItemContainer<OfferRequestLineStatus> bcOfferRequestLineStatus = new BindingSource<OfferRequestLineStatus>(OfferRequestLineStatus.class);
	private BeanItemContainer<ServiceType> bcServiceType = new BindingSource<ServiceType>(ServiceType.class);
	private BeanItemContainer<VehicleType> bcVehicleType = new BindingSource<VehicleType>(VehicleType.class);
	private BeanItemContainer<EmployeeAgent> bcEmployeeAgent = new BindingSource<EmployeeAgent>(EmployeeAgent.class);
	
	/**
	 * The constructor should first build the main layout, set the composition
	 * root and then do any custom initialization.
	 * 
	 * The constructor will not be automatically regenerated by the visual
	 * editor.
	 * @throws Exception 
	 * @throws IllegalArgumentException 
	 */
	public OfferRequestLineFixServiceViewForm() throws IllegalArgumentException, Exception {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// TODO add user code here
		initComponents();
		
		// configure Organization Type data
		offerRequestLineStatusField.setItemCaptionMode(Select.ITEM_CAPTION_MODE_PROPERTY);
		offerRequestLineStatusField.setItemCaptionPropertyId("description");
			
		serviceTypeField.setItemCaptionMode(Select.ITEM_CAPTION_MODE_PROPERTY);
		serviceTypeField.setItemCaptionPropertyId("description");

		vehicleTypeField.setItemCaptionMode(Select.ITEM_CAPTION_MODE_PROPERTY);
		vehicleTypeField.setItemCaptionPropertyId("description");
		
		driverField.setItemCaptionMode(Select.ITEM_CAPTION_MODE_PROPERTY);
		driverField.setItemCaptionPropertyId("name");
		
		// get form services from OSGi Service Registry
		getServices();
			
		// load data sources
		loadData();
	}
	
	private void initComponents() {
		startStopField.setNullRepresentation("");
		paymentField.setNullRepresentation("");
		passengersField.setNullRepresentation("");
		numberField.setNullRepresentation("");
		intermediateStopsField.setNullRepresentation("");
		endStopField.setNullRepresentation("");
		endStopField.setNullRepresentation("");
		commentField.setNullRepresentation("");
		
		startDateField.setDateFormat("dd/MM/yyyy HH:mm");
		endDateField.setDateFormat("dd/MM/yyyy HH:mm");
		offerRequestLineDateField.setDateFormat("dd/MM/yyyy HH:mm");
	}
	
	@SuppressWarnings({ "unchecked", "rawtypes" })
	private void getServices() {
		try {
			BundleContext bundleContext = FrameworkUtil.getBundle(OfferRequestLineFixServiceViewForm.class).getBundleContext();

			ServiceReference offerRequestLineStatusServiceReference = bundleContext.getServiceReference(OfferRequestLineStatusService.class.getName());
			offerRequestLineStatusService = OfferRequestLineStatusService.class.cast(bundleContext.getService(offerRequestLineStatusServiceReference));
			
			ServiceReference serviceTypeServiceReference = bundleContext.getServiceReference(ServiceTypeService.class.getName());
			serviceTypeService = ServiceTypeService.class.cast(bundleContext.getService(serviceTypeServiceReference));
			
			ServiceReference vehicleTypeServiceReference = bundleContext.getServiceReference(VehicleTypeService.class.getName());
			vehicleTypeService = VehicleTypeService.class.cast(bundleContext.getService(vehicleTypeServiceReference));
			
			ServiceReference employeeAgentServiceReference = bundleContext.getServiceReference(EmployeeAgentService.class.getName());
			employeeAgentService = EmployeeAgentService.class.cast(bundleContext.getService(employeeAgentServiceReference));
		}
		catch (Exception e) {
			e.getMessage();
			
		}
		
	}
	
	private void loadData() throws IllegalArgumentException, Exception {		
		bcOfferRequestLineStatus.removeAllItems();
		bcOfferRequestLineStatus.addAll(offerRequestLineStatusService.getAll());
		
		offerRequestLineStatusField.setContainerDataSource(bcOfferRequestLineStatus);
		
		bcServiceType.removeAllItems();
		bcServiceType.addAll(serviceTypeService.getAll());
		
		serviceTypeField.setContainerDataSource(bcServiceType);
		
		bcVehicleType.removeAllItems();
		bcVehicleType.addAll(vehicleTypeService.getAll());
		
		vehicleTypeField.setContainerDataSource(bcVehicleType);
		
		bcEmployeeAgent.removeAllItems();
		bcEmployeeAgent.addAll(employeeAgentService.getAll());
		
		driverField.setContainerDataSource(bcEmployeeAgent);
	}
	
	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("740px");
		mainLayout.setHeight("383px");
		mainLayout.setMargin(true);
		
		// top-level component properties
		setWidth("740px");
		setHeight("383px");
		
		// accomodationField
		accomodationField = new CheckBox();
		accomodationField.setCaption("Alojamiento");
		accomodationField.setImmediate(false);
		accomodationField.setWidth("-1px");
		accomodationField.setHeight("-1px");
		mainLayout.addComponent(accomodationField, "top:260.0px;left:633.0px;");
		
		// breackfastField
		breackfastField = new CheckBox();
		breackfastField.setCaption("Desayuno");
		breackfastField.setImmediate(false);
		breackfastField.setWidth("-1px");
		breackfastField.setHeight("-1px");
		mainLayout.addComponent(breackfastField, "top:260.0px;left:321.0px;");
		
		// commentField
		commentField = new TextField();
		commentField.setCaption("Observaciones o Datos Adicionales");
		commentField.setImmediate(false);
		commentField.setWidth("700px");
		commentField.setHeight("71px");
		commentField.setSecret(false);
		mainLayout.addComponent(commentField, "top:300.0px;left:20.0px;");
		
		// dinnerField
		dinnerField = new CheckBox();
		dinnerField.setCaption("Cena");
		dinnerField.setImmediate(false);
		dinnerField.setWidth("59px");
		dinnerField.setHeight("21px");
		mainLayout.addComponent(dinnerField, "top:260.0px;left:532.0px;");
		
		// driverField
		driverField = new ComboBox();
		driverField.setCaption("Conductor");
		driverField.setImmediate(false);
		driverField.setWidth("300px");
		driverField.setHeight("-1px");
		mainLayout.addComponent(driverField, "top:218.0px;left:420.0px;");
		
		// endDateField
		endDateField = new DateField();
		endDateField.setCaption("Fecha/Hora Destino");
		endDateField.setImmediate(false);
		endDateField.setWidth("140px");
		endDateField.setHeight("-1px");
		endDateField.setInvalidAllowed(false);
		endDateField.setResolution(2);
		mainLayout.addComponent(endDateField, "top:98.0px;left:420.0px;");
		
		// endStopField
		endStopField = new TextField();
		endStopField.setCaption("Lugar de Destino");
		endStopField.setImmediate(false);
		endStopField.setWidth("381px");
		endStopField.setHeight("-1px");
		endStopField.setSecret(false);
		mainLayout.addComponent(endStopField, "top:98.0px;left:19.0px;");
		
		// intermediateStopsField
		intermediateStopsField = new TextField();
		intermediateStopsField.setCaption("Localidades de Paso");
		intermediateStopsField.setImmediate(false);
		intermediateStopsField.setWidth("100.0%");
		intermediateStopsField.setHeight("61px");
		intermediateStopsField.setSecret(false);
		mainLayout.addComponent(intermediateStopsField,
				"top:139.0px;right:22.0px;left:20.0px;");
		
		// lunchField
		lunchField = new CheckBox();
		lunchField.setCaption("Almuerzo");
		lunchField.setImmediate(false);
		lunchField.setWidth("-1px");
		lunchField.setHeight("-1px");
		mainLayout.addComponent(lunchField, "top:260.0px;left:421.0px;");
		
		// numberField
		numberField = new TextField();
		numberField.setCaption("Número Línea");
		numberField.setImmediate(false);
		numberField.setWidth("80px");
		numberField.setHeight("-1px");
		numberField.setSecret(false);
		mainLayout.addComponent(numberField, "top:17.0px;left:20.0px;");
		
		// offerRequestLineDateField
		offerRequestLineDateField = new DateField();
		offerRequestLineDateField.setCaption("Fecha Registro");
		offerRequestLineDateField.setImmediate(false);
		offerRequestLineDateField.setWidth("143px");
		offerRequestLineDateField.setHeight("-1px");
		offerRequestLineDateField.setInvalidAllowed(false);
		offerRequestLineDateField.setResolution(2);
		mainLayout.addComponent(offerRequestLineDateField,
				"top:19.0px;left:580.0px;");
		
		// offerRequestLineStatusField
		offerRequestLineStatusField = new ComboBox();
		offerRequestLineStatusField.setCaption("Estado Línea");
		offerRequestLineStatusField.setImmediate(false);
		offerRequestLineStatusField.setWidth("145px");
		offerRequestLineStatusField.setHeight("-1px");
		mainLayout.addComponent(offerRequestLineStatusField,
				"top:57.0px;left:579.0px;");
		
		// passengersField
		passengersField = new TextField();
		passengersField.setCaption("Número Pasajeros");
		passengersField.setImmediate(false);
		passengersField.setWidth("102px");
		passengersField.setHeight("-1px");
		passengersField.setSecret(false);
		mainLayout.addComponent(passengersField, "top:218.0px;left:19.0px;");
		
		// paymentField
		paymentField = new TextField();
		paymentField.setCaption("Forma de Pago");
		paymentField.setImmediate(false);
		paymentField.setWidth("280px");
		paymentField.setHeight("24px");
		paymentField.setSecret(false);
		mainLayout.addComponent(paymentField, "top:260.0px;left:19.0px;");
		
		// serviceTypeField
		serviceTypeField = new ComboBox();
		serviceTypeField.setCaption("Tipo Servicio");
		serviceTypeField.setImmediate(false);
		serviceTypeField.setWidth("-1px");
		serviceTypeField.setHeight("-1px");
		mainLayout.addComponent(serviceTypeField, "top:17.0px;left:121.0px;");
		
		// startDateField
		startDateField = new DateField();
		startDateField.setCaption("Fecha/Hora Salida");
		startDateField.setImmediate(false);
		startDateField.setWidth("140px");
		startDateField.setHeight("-1px");
		startDateField.setInvalidAllowed(false);
		startDateField.setResolution(2);
		mainLayout.addComponent(startDateField, "top:59.0px;left:420.0px;");
		
		// startStopField
		startStopField = new TextField();
		startStopField.setCaption("Lugar de Partida");
		startStopField.setImmediate(false);
		startStopField.setWidth("381px");
		startStopField.setHeight("-1px");
		startStopField.setSecret(false);
		mainLayout.addComponent(startStopField, "top:57.0px;left:19.0px;");
		
		// vehicleTypeField
		vehicleTypeField = new ComboBox();
		vehicleTypeField.setCaption("Tipo Vehículo:");
		vehicleTypeField.setImmediate(false);
		vehicleTypeField.setWidth("260px");
		vehicleTypeField.setHeight("24px");
		mainLayout.addComponent(vehicleTypeField, "top:218.0px;left:140.0px;");
		
		return mainLayout;
	}
}
