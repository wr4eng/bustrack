package com.thingtrack.bustrack.view.web.form;

import org.osgi.framework.BundleContext;
import org.osgi.framework.FrameworkUtil;
import org.osgi.framework.ServiceReference;

import com.thingtrack.bustrack.domain.VehicleStatus;
import com.thingtrack.bustrack.domain.VehicleType;
import com.thingtrack.bustrack.service.api.VehicleStatusService;
import com.thingtrack.bustrack.service.api.VehicleTypeService;
import com.thingtrack.bustrack.view.web.form.field.TireRegisterCollectionField;
import com.thingtrack.bustrack.view.web.form.field.VehicleOrganizationCollectionField;
import com.thingtrack.konekti.domain.EmployeeAgent;
import com.thingtrack.konekti.domain.Supplier;
import com.thingtrack.konekti.domain.sensor.SensorTelemetry;
import com.thingtrack.konekti.service.api.EmployeeAgentService;
import com.thingtrack.konekti.service.api.SupplierService;
import com.thingtrack.konekti.service.sensor.api.SensorTelemetryService;
import com.thingtrack.konekti.view.addon.data.BindingSource;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.util.BeanItemContainer;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.CheckBox;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.DateField;
import com.vaadin.ui.Select;
import com.vaadin.ui.TextField;

@SuppressWarnings("serial")
public class VehicleViewForm extends CustomComponent {

	@AutoGenerated
	private AbsoluteLayout mainLayout;
	@AutoGenerated
	private VehicleOrganizationCollectionField organizationsField;
	@AutoGenerated
	private TireRegisterCollectionField tiresField;
	@AutoGenerated
	private ComboBox sensorTelemetryField;
	@AutoGenerated
	private ComboBox habitualDriverField;
	@AutoGenerated
	private ComboBox supplierField;
	@AutoGenerated
	private ComboBox vehicleTypeField;
	@AutoGenerated
	private ComboBox vehicleStatusField;
	@AutoGenerated
	private CheckBox videoField;
	@AutoGenerated
	private TextField vehicleNumberField;
	@AutoGenerated
	private TextField lengthField;
	@AutoGenerated
	private TextField seatingsField;
	@AutoGenerated
	private DateField registrationDateField;
	@AutoGenerated
	private DateField insuranceDateField;
	@AutoGenerated
	private DateField ITVDateField;
	@AutoGenerated
	private DateField purchaseDateField;
	@AutoGenerated
	private TextField observationField;
	@AutoGenerated
	private CheckBox microphoneField;
	@AutoGenerated
	private CheckBox fridgeField;
	@AutoGenerated
	private TextField frameNumberField;
	@AutoGenerated
	private TextField enrollmentField;
	@AutoGenerated
	private CheckBox dvdField;
	@AutoGenerated
	private TextField chassisField;
	@AutoGenerated
	private CheckBox beltsField;
	@AutoGenerated
	private CheckBox adaptedField;

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	// form services
	private SensorTelemetryService sensorTelemetryService;
	private EmployeeAgentService employeeAgentService;
	private SupplierService supplierService;
	private VehicleStatusService vehicleStatusService;
	private VehicleTypeService vehicleTypeService;
	
	// vehicle datasources
	private BeanItemContainer<SensorTelemetry> bcSensorTelemetry = new BindingSource<SensorTelemetry>(SensorTelemetry.class);
	private BeanItemContainer<EmployeeAgent> bcDriver = new BindingSource<EmployeeAgent>(EmployeeAgent.class);
	private BeanItemContainer<Supplier> bcSupplier = new BindingSource<Supplier>(Supplier.class);
	private BeanItemContainer<VehicleStatus> bcVehicleStatus = new BindingSource<VehicleStatus>(VehicleStatus.class);
	private BeanItemContainer<VehicleType> bcVehicleType = new BindingSource<VehicleType>(VehicleType.class);
	
	/**
	 * The constructor should first build the main layout, set the composition
	 * root and then do any custom initialization.
	 * 
	 * The constructor will not be automatically regenerated by the visual
	 * editor.
	 * @throws Exception 
	 * @throws IllegalArgumentException 
	 */
	public VehicleViewForm() throws IllegalArgumentException, Exception {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// TODO add user code here		
		initComponents();
				
		// configure Organization Type data
		sensorTelemetryField.setItemCaptionMode(Select.ITEM_CAPTION_MODE_PROPERTY);
		sensorTelemetryField.setItemCaptionPropertyId("description");
		
		habitualDriverField.setItemCaptionMode(Select.ITEM_CAPTION_MODE_PROPERTY);
		habitualDriverField.setItemCaptionPropertyId("name");
		
		supplierField.setItemCaptionMode(Select.ITEM_CAPTION_MODE_PROPERTY);
		supplierField.setItemCaptionPropertyId("name");
		
		vehicleTypeField.setItemCaptionMode(Select.ITEM_CAPTION_MODE_PROPERTY);
		vehicleTypeField.setItemCaptionPropertyId("description");

		vehicleStatusField.setItemCaptionMode(Select.ITEM_CAPTION_MODE_PROPERTY);
		vehicleStatusField.setItemCaptionPropertyId("description");
				
		// get form services from OSGi Service Registry
		getServices();
		
		// load data sources
		loadData();
				
	}
	
	private void initComponents() {
		//sensorTelemetryDescriptionField.setNullRepresentation("");
		vehicleNumberField.setNullRepresentation("");
		seatingsField.setNullRepresentation("");
		frameNumberField.setNullRepresentation("");
		enrollmentField.setNullRepresentation("");
		chassisField.setNullRepresentation("");
		observationField.setNullRepresentation("");
		lengthField.setNullRepresentation("");
		
		registrationDateField.setDateFormat("dd/MM/yyyy");
		purchaseDateField.setDateFormat("dd/MM/yyyy");
		ITVDateField.setDateFormat("dd/MM/yyyy");
		insuranceDateField.setDateFormat("dd/MM/yyyy");
		
		organizationsField.setCaption("Organizaciones");
		
	}
	
	@SuppressWarnings({ "unchecked", "rawtypes" })
	private void getServices() {
		try {
			BundleContext bundleContext = FrameworkUtil.getBundle(VehicleViewForm.class).getBundleContext();

			ServiceReference sensorTelemetryServiceReference = bundleContext.getServiceReference(SensorTelemetryService.class.getName());
			sensorTelemetryService = SensorTelemetryService.class.cast(bundleContext.getService(sensorTelemetryServiceReference));
			
			ServiceReference employeeAgentServiceReference = bundleContext.getServiceReference(EmployeeAgentService.class.getName());
			employeeAgentService = EmployeeAgentService.class.cast(bundleContext.getService(employeeAgentServiceReference));
			
			ServiceReference supplierServiceReference = bundleContext.getServiceReference(SupplierService.class.getName());
			supplierService = SupplierService.class.cast(bundleContext.getService(supplierServiceReference));
			
			ServiceReference vehicleStatusServiceReference = bundleContext.getServiceReference(VehicleStatusService.class.getName());
			vehicleStatusService = VehicleStatusService.class.cast(bundleContext.getService(vehicleStatusServiceReference));
			
			ServiceReference vehicleTypeServiceReference = bundleContext.getServiceReference(VehicleTypeService.class.getName());
			vehicleTypeService = VehicleTypeService.class.cast(bundleContext.getService(vehicleTypeServiceReference));
		}
		catch (Exception e) {
			throw new RuntimeException("¡No se pudo borrar el nuevo neumático!", e);			
			
		}
		
	}
	
	private void loadData() throws IllegalArgumentException, Exception {		
		bcDriver.removeAllItems();
		bcDriver.addAll(employeeAgentService.getAll());
		
		habitualDriverField.setContainerDataSource(bcDriver);
		
		bcSupplier.removeAllItems();
		bcSupplier.addAll(supplierService.getAll());
		
		supplierField.setContainerDataSource(bcSupplier);
		
		bcVehicleStatus.removeAllItems();
		bcVehicleStatus.addAll(vehicleStatusService.getAll());
		
		vehicleStatusField.setContainerDataSource(bcVehicleStatus);		
		
		bcVehicleType.removeAllItems();
		bcVehicleType.addAll(vehicleTypeService.getAll());
		
		vehicleTypeField.setContainerDataSource(bcVehicleType);
		
		bcSensorTelemetry.removeAllItems();
		bcSensorTelemetry.addAll(sensorTelemetryService.getAll());
		
		sensorTelemetryField.setContainerDataSource(bcSensorTelemetry);		
	}
	
	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("680px");
		mainLayout.setHeight("520px");
		mainLayout.setMargin(true);
		
		// top-level component properties
		setWidth("680px");
		setHeight("520px");
		
		// adaptedField
		adaptedField = new CheckBox();
		adaptedField.setCaption("Adaptado");
		adaptedField.setImmediate(false);
		adaptedField.setWidth("-1px");
		adaptedField.setHeight("-1px");
		adaptedField.setRequired(true);
		mainLayout.addComponent(adaptedField, "top:140.0px;left:20.0px;");
		
		// beltsField
		beltsField = new CheckBox();
		beltsField.setCaption("Cinturones");
		beltsField.setImmediate(false);
		beltsField.setWidth("-1px");
		beltsField.setHeight("20px");
		beltsField.setRequired(true);
		mainLayout.addComponent(beltsField, "top:140.0px;left:98.0px;");
		
		// chassisField
		chassisField = new TextField();
		chassisField.setCaption("Número Chasis");
		chassisField.setImmediate(false);
		chassisField.setWidth("159px");
		chassisField.setHeight("-1px");
		chassisField.setSecret(false);
		mainLayout.addComponent(chassisField, "top:57.0px;left:361.0px;");
		
		// dvdField
		dvdField = new CheckBox();
		dvdField.setCaption("Dvd");
		dvdField.setImmediate(false);
		dvdField.setWidth("-1px");
		dvdField.setHeight("-1px");
		dvdField.setRequired(true);
		mainLayout.addComponent(dvdField, "top:140.0px;left:183.0px;");
		
		// enrollmentField
		enrollmentField = new TextField();
		enrollmentField.setCaption("Matrícula");
		enrollmentField.setImmediate(false);
		enrollmentField.setWidth("180px");
		enrollmentField.setHeight("-1px");
		enrollmentField.setRequired(true);
		enrollmentField.setSecret(false);
		mainLayout.addComponent(enrollmentField, "top:57.0px;left:20.0px;");
		
		// frameNumberField
		frameNumberField = new TextField();
		frameNumberField.setCaption("Número del cuadro");
		frameNumberField.setImmediate(false);
		frameNumberField.setWidth("120px");
		frameNumberField.setHeight("-1px");
		frameNumberField.setSecret(false);
		mainLayout.addComponent(frameNumberField, "top:57.0px;left:221.0px;");
		
		// fridgeField
		fridgeField = new CheckBox();
		fridgeField.setCaption("Frigorífico");
		fridgeField.setImmediate(false);
		fridgeField.setWidth("-1px");
		fridgeField.setHeight("-1px");
		fridgeField.setRequired(true);
		mainLayout.addComponent(fridgeField, "top:172.0px;left:20.0px;");
		
		// microphoneField
		microphoneField = new CheckBox();
		microphoneField.setCaption("Micrófono");
		microphoneField.setImmediate(false);
		microphoneField.setWidth("-1px");
		microphoneField.setHeight("-1px");
		microphoneField.setRequired(true);
		mainLayout.addComponent(microphoneField, "top:172.0px;left:160.0px;");
		
		// observationField
		observationField = new TextField();
		observationField.setCaption("Observaciones");
		observationField.setImmediate(false);
		observationField.setWidth("640px");
		observationField.setHeight("40px");
		observationField.setSecret(false);
		mainLayout.addComponent(observationField, "top:320.0px;left:20.0px;");
		
		// purchaseDateField
		purchaseDateField = new DateField();
		purchaseDateField.setCaption("Fecha compra");
		purchaseDateField.setImmediate(false);
		purchaseDateField.setWidth("120px");
		purchaseDateField.setHeight("-1px");
		purchaseDateField.setInvalidAllowed(false);
		mainLayout.addComponent(purchaseDateField, "top:100.0px;left:540.0px;");
		
		// ITVDateField
		ITVDateField = new DateField();
		ITVDateField.setCaption("Fecha ITV");
		ITVDateField.setImmediate(false);
		ITVDateField.setWidth("120px");
		ITVDateField.setHeight("-1px");
		ITVDateField.setInvalidAllowed(false);
		mainLayout.addComponent(ITVDateField, "top:137.0px;left:539.0px;");
		
		// insuranceDateField
		insuranceDateField = new DateField();
		insuranceDateField.setCaption("Fecha Vencimiento Seguro");
		insuranceDateField.setImmediate(false);
		insuranceDateField.setWidth("120px");
		insuranceDateField.setHeight("-1px");
		insuranceDateField.setInvalidAllowed(false);
		mainLayout
				.addComponent(insuranceDateField, "top:137.0px;left:380.0px;");
		
		// registrationDateField
		registrationDateField = new DateField();
		registrationDateField.setCaption("Fecha registro");
		registrationDateField.setImmediate(false);
		registrationDateField.setWidth("120px");
		registrationDateField.setHeight("-1px");
		registrationDateField.setInvalidAllowed(false);
		mainLayout.addComponent(registrationDateField,
				"top:58.0px;left:539.0px;");
		
		// seatingsField
		seatingsField = new TextField();
		seatingsField.setCaption("Asientos");
		seatingsField.setImmediate(false);
		seatingsField.setWidth("60px");
		seatingsField.setHeight("-1px");
		seatingsField.setRequired(true);
		seatingsField.setSecret(false);
		mainLayout.addComponent(seatingsField, "top:218.0px;left:20.0px;");
		
		// lengthField
		lengthField = new TextField();
		lengthField.setCaption("Longitud");
		lengthField.setImmediate(false);
		lengthField.setWidth("60px");
		lengthField.setHeight("-1px");
		lengthField.setRequired(true);
		lengthField.setSecret(false);
		mainLayout.addComponent(lengthField, "top:257.0px;left:20.0px;");
		
		// vehicleNumberField
		vehicleNumberField = new TextField();
		vehicleNumberField.setCaption("Número vehículo");
		vehicleNumberField.setImmediate(false);
		vehicleNumberField.setWidth("180px");
		vehicleNumberField.setHeight("-1px");
		vehicleNumberField.setRequired(true);
		vehicleNumberField.setSecret(false);
		mainLayout.addComponent(vehicleNumberField, "top:17.0px;left:20.0px;");
		
		// videoField
		videoField = new CheckBox();
		videoField.setCaption("Video");
		videoField.setImmediate(false);
		videoField.setWidth("-1px");
		videoField.setHeight("-1px");
		videoField.setRequired(true);
		mainLayout.addComponent(videoField, "top:172.0px;left:98.0px;");
		
		// vehicleStatusField
		vehicleStatusField = new ComboBox();
		vehicleStatusField.setCaption("Estado vehículo");
		vehicleStatusField.setImmediate(false);
		vehicleStatusField.setWidth("145px");
		vehicleStatusField.setHeight("-1px");
		vehicleStatusField.setRequired(true);
		mainLayout.addComponent(vehicleStatusField, "top:18.0px;left:515.0px;");
		
		// vehicleTypeField
		vehicleTypeField = new ComboBox();
		vehicleTypeField.setCaption("Tipo vehículo");
		vehicleTypeField.setImmediate(false);
		vehicleTypeField.setWidth("140px");
		vehicleTypeField.setHeight("-1px");
		vehicleTypeField.setRequired(true);
		mainLayout.addComponent(vehicleTypeField, "top:18.0px;left:361.0px;");
		
		// supplierField
		supplierField = new ComboBox();
		supplierField.setCaption("Proveedor");
		supplierField.setImmediate(true);
		supplierField.setWidth("180px");
		supplierField.setHeight("24px");
		mainLayout.addComponent(supplierField, "top:99.0px;left:20.0px;");
		
		// habitualDriverField
		habitualDriverField = new ComboBox();
		habitualDriverField.setCaption("Conductor habitual");
		habitualDriverField.setImmediate(true);
		habitualDriverField.setWidth("300px");
		habitualDriverField.setHeight("-1px");
		mainLayout.addComponent(habitualDriverField,
				"top:100.0px;left:220.0px;");
		
		// sensorTelemetryField
		sensorTelemetryField = new ComboBox();
		sensorTelemetryField.setCaption("Sensor Telemetría");
		sensorTelemetryField.setImmediate(true);
		sensorTelemetryField.setWidth("160px");
		sensorTelemetryField.setHeight("-1px");
		mainLayout.addComponent(sensorTelemetryField,
				"top:218.0px;left:98.0px;");
		
		// tiresField
		tiresField = new TireRegisterCollectionField();
		tiresField.setCaption("Neumáticos");
		tiresField.setImmediate(false);
		tiresField.setWidth("643px");
		tiresField.setHeight("110px");
		mainLayout.addComponent(tiresField, "top:391.0px;left:20.0px;");
		
		// organizationsField
		organizationsField = new VehicleOrganizationCollectionField();
		organizationsField.setImmediate(false);
		organizationsField.setWidth("380px");
		organizationsField.setHeight("120px");
		mainLayout
				.addComponent(organizationsField, "top:181.0px;left:280.0px;");
		
		return mainLayout;
	}
}